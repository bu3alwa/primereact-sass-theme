@use 'sass:math';

.p-chips {
    .p-chips-multiple-container {
        padding: math.div(nth($inputPadding, 1), 2) nth($inputPadding, 2);

        &:not(.p-disabled):hover {
            border-color: $inputHoverBorderColor;
        }

        &:not(.p-disabled).p-focus {
            @include focused-input();
        }

        .p-chips-token {
            padding: math.div(nth($inputPadding, 1), 2) nth($inputPadding, 2);
            margin-right: $inlineSpacing;
            background: $chipBg;
            color: $chipTextColor;
            border-radius: $chipBorderRadius;

            .p-chips-token-icon {
                margin-left: $inlineSpacing;
            }
        }

        .p-chips-input-token {
            padding: math.div(nth($inputPadding, 1), 2) 0;
                
            input {
                font-family: $fontFamily;
                font-size: $fontSize;
                color: $textColor;
                padding: 0;
                margin: 0;
            }
        }
    }

    &.p-invalid.p-component > .p-inputtext {
        @include invalid-input();
    }
}

.p-chips-icon-left > i:first-of-type, 
.p-chips-icon-left > svg:first-of-type {
    left: nth($inputPadding, 2);
    color: $inputIconColor;
}

.p-chips-icon-right > i:last-of-type, 
.p-chips-icon-right > svg:last-of-type {
    right: nth($inputPadding, 2);
    color: $inputIconColor;
}

.p-chips-icon-left > .p-chips > .p-inputtext,
.p-chips-icon-left > label {
    padding-left: nth($inputPadding, 2) * 2 + $primeIconFontSize;
}

.p-chips-icon-right > .p-chips > .p-inputtext{
    padding-right: nth($inputPadding, 2) * 2 + $primeIconFontSize;
}